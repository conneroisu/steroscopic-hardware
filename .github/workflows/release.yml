name: Release Go Project

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  envCI:
    name: Build, Test, and Lint Go Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - uses: "DeterminateSystems/nix-installer-action@main"
        with:
          determinate: true
      - name: Build
        run: |
          echo "Building Go project..."
          nix run .\#build-go
      - name: Test
        run: |
          echo "Testing Go project..."
          nix run .\#test-go
      - name: Lint
        run: |
          echo "Linting Go project..."
          nix run .\#lint-go
      - name: Check
        run: |
          echo "Checking Nix project..."
          nix flake check
  release:
    name: Release
    needs: envCI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Set GORELEASER_PREVIOUS_TAG in actual release
        if: ${{ !contains(github.ref, '-nightly') }}
        # find previous tag by filtering out nightly tags and choosing the
        # second to last tag (last one is the current release)
        run: |
          prev_tag=$(git tag | grep -v "nightly" | sort -r --version-sort | head -n 2 | tail -n 1)
          echo "GORELEASER_PREVIOUS_TAG=$prev_tag" >> $GITHUB_ENV

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
